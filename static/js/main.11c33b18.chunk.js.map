{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","expenses","length","map","expense","id","ChartBar","barFillheight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","showForm","setShowForm","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.11c33b18.chunk.js","sourcesContent":["import './Card.css';\r\n\r\nconst Card = (props) => {\r\n    const classes = 'card ' + props.className;\r\n    \r\n    return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import './ExpenseDate.css';\r\n\r\nconst ExpenseDate = (props) => {\r\n    const month = props.date.toLocaleString('en-US', {month: 'long'});\r\n    const day = props.date.toLocaleString('en-US', {day: '2-digit'});\r\n    const year = props.date.getFullYear();\r\n\r\n    return(\r\n        <div className=\"expense-date\">\r\n            <div className=\"expense-date__month\">{month}</div>\r\n            <div className=\"expense-date__year\">{year}</div>\r\n            <div className=\"expense-date__day\">{day}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpenseDate;","import React from 'react';\r\nimport './ExpenseItem.css';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\n\r\nconst ExpenseItem = (props) => {\r\n\r\n    return (\r\n        <li>\r\n            <Card className='expense-item'>\r\n                <ExpenseDate date={props.date} />\r\n                <div className=\"expense-item__description\">\r\n                    <h2>{props.title}</h2>\r\n                    <div className=\"expense-item__price\">${props.amount}</div>\r\n                </div>\r\n            </Card>\r\n        </li>\r\n    );\r\n\r\n};\r\n\r\nexport default ExpenseItem;","import ExpenseItem from \"./ExpenseItem\";\r\nimport './ExpensesList.css';\r\n\r\nconst ExpensesList = props => {\r\n\r\n    if (props.expenses.length === 0) {\r\n        return <h2 className=\"expenses-list__fallback\">No Expenses found.</h2>;\r\n    };\r\n\r\n    return (\r\n        <ul className=\"expenses-list\">\r\n            {props.expenses.map((expense) => (\r\n                <ExpenseItem\r\n                    key={expense.id}\r\n                    title={expense.title}\r\n                    amount={expense.amount}\r\n                    date={expense.date}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default ExpensesList;","import React from 'react'\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n    let barFillheight = '0%';\r\n\r\n    if (props.maxValue > 0) {\r\n        barFillheight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n    }\r\n\r\n    return (\r\n        <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n                <div\r\n                    className=\"chart-bar__fill\"\r\n                    style={{ height: barFillheight }}>\r\n                </div>\r\n            </div>\r\n            <div className=\"chart-bar__label\">{props.label}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartBar;","import React from \"react\";\r\nimport ChartBar from \"./ChartBar\";\r\nimport './Chart.css';\r\n\r\nconst Chart = props => {\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n\r\n    return (\r\n        <div className=\"chart\">\r\n            {props.dataPoints.map((dataPoint) => (\r\n                <ChartBar\r\n                    value={dataPoint.value}\r\n                    maxValue={totalMaximum}\r\n                    label={dataPoint.label}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chart;","import React from 'react'\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = props => {\r\n    const chartDataPoints = [\r\n        { label: 'Jan', value: 0 },\r\n        { label: 'Feb', value: 0 },\r\n        { label: 'Mar', value: 0 },\r\n        { label: 'Apr', value: 0 },\r\n        { label: 'May', value: 0 },\r\n        { label: 'Jun', value: 0 },\r\n        { label: 'Jul', value: 0 },\r\n        { label: 'Aug', value: 0 },\r\n        { label: 'Sep', value: 0 },\r\n        { label: 'Oct', value: 0 },\r\n        { label: 'Nov', value: 0 },\r\n        { label: 'Dec', value: 0 },\r\n    ];\r\n\r\n    for (const expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth(); //starting at zero\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return <Chart dataPoints={chartDataPoints}/>\r\n}\r\n\r\nexport default ExpensesChart;","import React, { useState } from 'react';\r\nimport Card from '../UI/Card';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesList from './ExpensesList';\r\nimport './Expenses.css';\r\nimport ExpensesChart from './ExpensesChart';\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState('2020');\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.expenses.filter(expense => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <Card className='expenses'>\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n        <ExpensesChart expenses={filteredExpenses}/>\r\n        <ExpensesList expenses={filteredExpenses}/>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;","import React, { useState } from 'react';\r\n\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState('');\r\n  const [enteredAmount, setEnteredAmount] = useState('');\r\n  const [enteredDate, setEnteredDate] = useState('');\r\n  // const [userInput, setUserInput] = useState({\r\n  //   enteredTitle: '',\r\n  //   enteredAmount: '',\r\n  //   enteredDate: '',\r\n  // });\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredTitle: event.target.value,\r\n    // });\r\n    // setUserInput((prevState) => {\r\n    //   return { ...prevState, enteredTitle: event.target.value };\r\n    // });\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredAmount: event.target.value,\r\n    // });\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredDate: event.target.value,\r\n    // });\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle('');\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className='new-expense__controls'>\r\n        <div className='new-expense__control'>\r\n          <label>Title</label>\r\n          <input\r\n            type='text'\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className='new-expense__control'>\r\n          <label>Amount</label>\r\n          <input\r\n            type='number'\r\n            min='0.01'\r\n            step='0.01'\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className='new-expense__control'>\r\n          <label>Date</label>\r\n          <input\r\n            type='date'\r\n            min='2019-01-01'\r\n            max='2022-12-31'\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='new-expense__actions'>\r\n      <button type='cancel' onClick={props.onCancel}>Cancel</button>\r\n        <button type='submit'>Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;","import React, { useState } from \"react\";\r\nimport './NewExpense.css'\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nconst NewExpense = (props) => {\r\n\r\n    const [ showForm, setShowForm] = useState(false);\r\n\r\n    const showFormHandler = () => {\r\n        setShowForm(true);\r\n    }\r\n\r\n    const notShowFormHandler = () => {\r\n        setShowForm(false);\r\n    }\r\n\r\n    const saveExpenseDataHandler = (enteredExpenseData) => {\r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString()\r\n        };\r\n\r\n        props.onAddExpense(expenseData);\r\n        setShowForm(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"new-expense\">\r\n            {!showForm && <button onClick={showFormHandler} >Add New Expense</button>}\r\n            {showForm && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={notShowFormHandler}/>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewExpense;","import React, { useState } from 'react'; \r\nimport Expenses from \"./components/Expenses/Expenses\";\r\nimport NewExpense from \"./components/NewExpense/NewExpense\";\r\n\r\nconst DUMMY_EXPENSES = [\r\n    {\r\n        id: 'e1',\r\n        title: 'Toilet Paper',\r\n        amount: 94.12,\r\n        date: new Date(2020, 7, 14),\r\n    },\r\n\r\n    {\r\n        id: 'e2',\r\n        title: 'New TV',\r\n        amount: 799.49,\r\n        date: new Date(2021, 2, 12)\r\n    },\r\n\r\n    {\r\n        id: 'e3',\r\n        title: 'Car Insurance',\r\n        amount: 294.67,\r\n        date: new Date(2021, 2, 28),\r\n    },\r\n\r\n    {\r\n        id: 'e4',\r\n        title: 'New Desk (Wooden)',\r\n        amount: 450,\r\n        date: new Date(2021, 5, 12),\r\n    },\r\n\r\n];\r\n\r\nconst App = () => {\r\n    \r\n    const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\r\n\r\n    const addExpenseHandler = expense => {\r\n        setExpenses((prevExpenses) => {\r\n            return [expense, ...prevExpenses];\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <NewExpense onAddExpense={addExpenseHandler} />\r\n            <Expenses expenses={expenses} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}